(block dinit

  (blockinherit .hybrid.agent.template)

  (boolean allow_unknown_agents true)

  (booleanif allow_unknown_agents
             (true

               (call .exec.subj_type_transition (subj .sys.subj))))

  ;; Comprimise for /dev/console in race with udev to create it
  ;; TODO: implement relabeling of /dev in dinit
  (call .devtmp.readwrite_fs_chr_files (subj))

  (call .proc.mount_fs (subj))
  (call .proc.mounton_fs_dirs (subj))
  (call .proc.unmount_fs (subj))

  (call conf.list_file_dirs (subj))

  (call data.list_file_dirs (subj))

  (call run.manage_file_sock_files (subj))
  (call run.run_file_type_transition_file (subj))

  (call service.list_file_dirs (subj))
  (call service.read_file_files (subj))

  (call .sys.syslogconsole_system (subj))

  (allow subj self create_unix_stream_socket)
  (allow subj self (capability (sys_admin sys_boot)))
  (allow subj self (capability2 (syslog)))
  (allow subj self (unix_stream_socket (accept connectto listen)))

  (block run

    (filecon "/run/dinitctl" socket file_context)

    (macro run_file_type_transition_file ((type ARG1))
           (call .run.file_type_transition
                 (ARG1 file sock_file "dinitctl")))

    (blockinherit .file.run.template))

  (block service

    (filecon "/usr/lib/dinit\.d" dir file_context)
    (filecon "/usr/lib/dinit\.d/.*" any file_context)
    
    (macro conf_file_type_transition_file ((type ARG1))
           (call .conf.file_type_transition
                 (ARG1 file dir "dinit\.d")))

    (macro lib_file_type_transition_file ((type ARG1))
           (call .lib.file_type_transition
                 (ARG1 file dir "dinit\.d")))

    (blockinherit .file.macro_template_dirs)
    (blockinherit .file.lib.service.template)))

(in file.lib

  (block service

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (blockinherit file.all_macro_template_files)

    (typeattribute typeattr)

    (call data.type (typeattr))

    (block base_template

      (blockabstract base_template)

      (blockinherit .file.lib.base_template)

      (call .file.lib.service.type (file)))

    (block template

      (blockabstract template)

      (blockinherit .file.macro_template_files)
      (blockinherit .file.lib.service.base_template))))

(in file.unconfined
    (call .dinit.service.conf_file_type_transition_file (typeattr))
    (call .dinit.service.lib_file_type_transition_file (typeattr))
) ;; namespace file.unconfined

(in after dinit.exec

    (filecon "/usr/bin/dinit" file file_context))
