(block dhcpcd

  (blockinherit .sys.agent.template)

  (call conf.list_file_dirs (subj))
  (call conf.read_file_files (subj))

  (call run.manage_file_files (subj))
  (call run.run_file_type_transition_file (subj))

  (call state.manage_file_dirs (subj))
  (call state.manage_file_files (subj))

  (call script.subj_type_transition (subj))

  (call .bus.search_sysfile_pattern.type (subj))

  ;; For /sys/class/net
  (call .class.getattr_sysfile_files (subj))
  (call .class.list_sysfile_pattern.type (subj))
  (call .class.read_sysfile_lnk_files (subj))

  (call .cpuinfo.read_procfile_files (subj))

  (call .devices.read_sysfile_pattern.type (subj))

  (call .dhcp.namebind_port_udp_sockets (subj))

  (call .hostname.read_sysctlfile_files (subj))

  (call .ipv4.readwrite_sysctlfile_files (subj))
  (call .ipv4.search_sysctlfile_dirs (subj))

  (call .ipv6.readwrite_sysctlfile_files (subj))
  (call .ipv6.search_sysctlfile_dirs (subj))

  (call .kernel.read_sysfile_files (subj))

  (call .locale.data.map_file_pattern.type (subj))
  (call .locale.read_file_pattern.type (subj))

  (call .metalog.client.type (subj))

  (call .net.egress_netifs (subj))
  (call .net.nodebind_netnode_udp_sockets (subj))
  (call .net.search_sysctlfile_pattern.type (subj))
  (call .net.sendto_nodes (subj))

  (call .nss.passwdgroup.type (subj))

  (call .random.read_nodedev_chr_files (subj))

  (call .resolv.conf.manage_file_files (subj))

  (call .sys.getattr_fs_pattern.type (subj))
  (call .sys.modulerequest_system (subj))

  (allow subj self (capability
         (net_admin net_bind_service net_raw setgid setuid sys_chroot)))
  (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))
  (allow subj self (process (setrlimit)))

  (allow subj self create_netlink_generic_socket)
  (allow subj self create_netlink_kobject_uevent_socket)
  (allow subj self create_netlink_route_socket)
  (allow subj self create_packet_socket)
  (allow subj self create_rawip_socket)
  (allow subj self create_udp_socket)
  (allow subj self create_unix_dgram_socket)
  (allow subj self create_unix_stream_socket)

  (optional dhcpcd_invalidassociationsboolfile
            (call .invalidassociations.type (subj)))

  (optional dhcpcd_invalidpacketsboolfile
            (call .invalidpackets.type (subj)))

  (optional dhcpcd_invalidpeersboolfile
            (call .invalidpeers.type (subj)))

  (block script

    (blockinherit .sys.agent.template))

  (block conf

    (filecon "/etc/dhcpcd\.conf" file file_context)

    (macro conf_file_type_transition_file ((type ARG1))
           (call .conf.file_type_transition
                 (ARG1 file file "dhcpcd.conf")))

    (blockinherit .file.conf.template))

  (block data

    (filecon "/usr/share/dhcpcd" dir file_context)
    (filecon "/usr/share/dhcpcd/.*" any file_context)

    (macro data_file_type_transition_file ((type ARG1))
           (call .data.file_type_transition
                 (ARG1 file dir "dhcpcd")))

    (blockinherit .file.data.dhcpcd.template))

  (block run

    (filecon "/run/dhcpcd" dir file_context)
    (filecon "/run/dhcpcd/.*" any file_context)

    (macro run_file_type_transition_file ((type ARG1))
           (call .run.file_type_transition
                 (ARG1 file dir "dhcpcd")))

    (blockinherit .file.macro_template_dirs)
    (blockinherit .file.macro_template_files)
    (blockinherit .file.macro_template_sock_files)
    (blockinherit .file.run.dhcpcd.base_template))

  (block state

    (filecon "/var/lib/dhcpcd" dir file_context)
    (filecon "/var/lib/dhcpcd/.*" any file_context)

    (macro state_file_type_transition_file ((type ARG1))
           (call .state.file_type_transition
                 (ARG1 file dir "dhcpcd")))

    (blockinherit .file.macro_template_dirs)
    (blockinherit .file.macro_template_files)
    (blockinherit .file.state.base_template)))

(in file.data

    (block dhcpcd

      (macro type ((type ARG1))
             (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_dirs)
      (blockinherit file.all_macro_template_files)

      (typeattribute typeattr)

      (call file.data.type (typeattr))

      (block base_template

        (blockabstract base_template)

        (blockinherit .file.data.base_template)

        (call .file.data.dhcpcd.type (file)))

      (block template

        (blockabstract template)

        (blockinherit file.all_macro_template_dirs)
        (blockinherit file.all_macro_template_files)

        (blockinherit .file.data.dhcpcd.base_template))))

(in file.run

    (block dhcpcd

      (macro type ((type ARG1))
             (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_dirs)
      (blockinherit file.all_macro_template_files)
      (blockinherit file.all_macro_template_sock_files)

      (typeattribute typeattr)

      (call file.run.type (typeattr))

      (block base_template

        (blockabstract base_template)

        (blockinherit .file.run.base_template)

        (call .file.run.dhcpcd.type (file)))

      (block template

        (blockabstract template)

        (blockinherit .file.macro_template_sock_files)
        (blockinherit .file.run.dhcpcd.base_template))))

(in file.unconfined

    (call .dhcpcd.conf.conf_file_type_transition_file (typeattr))
    (call .dhcpcd.data.data_file_type_transition_file (typeattr))
    (call .dhcpcd.run.run_file_type_transition_file (typeattr))
    (call .dhcpcd.state.state_file_type_transition_file (typeattr)))

(in after dhcpcd.exec

    (filecon "/usr/bin/dhcpcd" file file_context))

(in after dhcpcd.script.exec

    (filecon "/usr/lib/dhcpcd/dhcpcd-run-hooks" file file_context))
