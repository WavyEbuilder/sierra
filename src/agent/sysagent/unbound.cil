;; SPDX-FileCopyrightText: Â© 2025 Rahul Sandhu <nvraxn@gmail.com>
;; SPDX-License-Identifier: GPL-3.0-or-later

(block unbound

  (block checkconf

    (blockinherit .sys.agent.template))

  (block conf

    (filecon "/etc/unbound" dir file_context)
    (filecon "/etc/unbound/.*" any file_context)

    (macro conf_file_type_transition_file ((type ARG1))
           (call .conf.file_type_transition
                 (ARG1 file dir "unbound")))

    (blockinherit .file.conf.template))

  (block control

    (blockinherit .sys.agent.template))

  (block log

    (filecon "/var/log/unbound\.log" file file_context)

    (macro log_file_type_transition_file ((type ARG1))
           (call .log.file_type_transition
                 (ARG1 file file "unbound.log")))

    (blockinherit .file.log.template))

  (block run

    (filecon "/run/unbound\.sock" socket file_context)

    (macro run_file_type_transition_file ((type ARG1))
           (call .run.file_type_transition
                 (ARG1 file sock_file "unbound.sock")))

    (blockinherit .file.run.template))

  (block server

    (allow subj self (capability (net_bind_service setgid setuid sys_resource)))
    (allow subj self (netlink_route_socket (nlmsg_read nlmsg_write)))
    (allow subj self (process (setrlimit)))
    (allow subj self (unix_stream_socket (accept listen)))

    (allow subj self create_netlink_route_socket)
    (allow subj self create_tcp_stream_socket)
    (allow subj self create_udp_socket)

    (call conf.list_file_dirs (subj))
    (call conf.read_file_files (subj))

    (call log.log_file_type_transition_file (subj))
    (call log.manage_file_files (subj))

    (call run.manage_file_sock_files (subj))
    (call run.run_file_type_transition_file (subj))

    (call state.manage_file_dirs (subj))
    (call state.manage_file_files (subj))

    (call .cert.read_file_pattern.type (subj))

    (call .dns.nameconnect_port_tcp_sockets (subj))
    (call .dns.namebind_port_tcp_sockets (subj))
    (call .dns.namebind_port_udp_sockets (subj))

    (call .locale.data.map_file_pattern.type (subj))
    (call .locale.read_file_pattern.type (subj))

    (call .log.search_file_pattern.type (subj))

    (call .metalog.client.type (subj))

    (call .net.egress_netifs (subj))
    (call .net.nodebind_netnode_tcp_sockets (subj))
    (call .net.nodebind_netnode_udp_sockets (subj))
    (call .net.sendto_nodes (subj))

    ;; Calls getpwnam(3) to drop privileges:
    ;; https://github.com/NLnetLabs/unbound/blob/master/daemon/unbound.c#L538-L542
    (call .nss.passwdgroup.type (subj))

    (call .run.deletename_file_dirs (subj))

    (optional unbound_invalidassociationsboolfile
              (call .invalidassociations.type (subj)))

    (optional unbound_invalidpacketsboolfile
              (call .invalidpackets.type (subj)))

    (optional unbound_invalidpeersboolfile
              (call .invalidpeers.type (subj)))

    (blockinherit .sys.agent.template))

  (block state

    (filecon "/var/lib/unbound" dir file_context)
    (filecon "/var/lib/unbound/.*" any file_context)

    (macro state_file_type_transition_file ((type ARG1))
           (call .state.file_type_transition
                 (ARG1 file dir "unbound")))

    (blockinherit .file.macro_template_dirs)
    (blockinherit .file.macro_template_files)
    (blockinherit .file.state.base_template)))

(in file.unconfined

    (call .unbound.conf.conf_file_type_transition_file (typeattr))
    (call .unbound.log.log_file_type_transition_file (typeattr))
    (call .unbound.run.run_file_type_transition_file (typeattr))
    (call .unbound.state.state_file_type_transition_file (typeattr)))

(in after unbound.checkconf.exec

    (filecon "/usr/bin/unbound-checkconf" file file_context))

(in after unbound.control.exec

    (filecon "/usr/bin/unbound-control" file file_context))

(in after unbound.server.exec

    (filecon "/usr/bin/unbound" file file_context))
