;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in tmp

    (filecon "/dev/shm" dir fs_context)
    (filecon "/dev/shm/.*" any ())

    (filecon "/run/initramfs/.*" any ())

    (filecon "/tmp" dir file_context)
    (filecon "/tmp/.*" any ())

    (filecon "/tmp/\.font-unix" dir file_context)
    (filecon "/tmp/\.font-unix/.*" any ())
    (filecon "/tmp/\.ICE-unix" dir file_context)
    (filecon "/tmp/\.ICE-unix/.*" any ())
    (filecon "/tmp/\.Test-unix" dir file_context)
    (filecon "/tmp/\.Test-unix/.*" any ())
    (filecon "/tmp/\.X11-unix" dir file_context)
    (filecon "/tmp/\.X11-unix/.*" any ())
    (filecon "/tmp/\.XIM-unix" dir file_context)
    (filecon "/tmp/\.XIM-unix/.*" any ())

    (macro data_file_type_transition_file ((type ARG1))
	   (call .data.file_type_transition
		 (ARG1 file dir "tmp")))

    (macro root_file_type_transition_file ((type ARG1))
	   (call .root.file_type_transition
		 (ARG1 file dir "tmp")))

    (macro sys_tmp_file_type_transition_file ((type ARG1))
	   (call .sys.tmp.file_type_transition
		 (ARG1 file dir "tmp")))

    (macro var_file_type_transition_file ((type ARG1))
	   (call .var.file_type_transition
		 (ARG1 file dir "tmp")))

    (blockinherit .file.tmp.template)

    (call .rbacsep.exempt.obj.type (file))

    (allow fs self (filesystem (associate)))

    (call .devtmp.associate_fs (fs))

) ;; namespace tmp

(in file

    (block tmp

      (macro type ((type ARG1))
	     (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_all_files)
      (blockinherit file.all_macro_template_blk_files)
      (blockinherit file.all_macro_template_chr_files)
      (blockinherit file.all_macro_template_dirs)
      (blockinherit file.all_macro_template_fifo_files)
      (blockinherit file.all_macro_template_files)
      (blockinherit file.all_macro_template_lnk_files)
      (blockinherit file.all_macro_template_sock_files)

      (typeattribute typeattr)

      (call file.type (typeattr))

      (call .tmp.associate_fs (typeattr))

      (block base_template

	(blockabstract base_template)

	(blockinherit .file.base_template)

	(call .file.tmp.type (file)))

      (block template

	(blockabstract template)

	(blockinherit .file.macro_template_dirs)
	(blockinherit .file.macro_template_fifo_files)
	(blockinherit .file.macro_template_files)
	(blockinherit .file.macro_template_lnk_files)
	(blockinherit .file.macro_template_sock_files)
	(blockinherit .file.tmp.base_template))))

(in file.unconfined
    (call .tmp.data_file_type_transition_file (typeattr))
    (call .tmp.root_file_type_transition_file (typeattr))
    (call .tmp.var_file_type_transition_file (typeattr))
) ;; namespace file.unconfined

(in sys
    (call .tmp.sys_tmp_file_type_transition_file (subj))
) ;; namespace sys
