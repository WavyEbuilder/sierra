;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cert

  (filecon "/etc/ca-certificates" dir file_context)
  (filecon "/etc/ca-certificates/.*" any file_context)

  (filecon "/etc/ca-certificates\.conf" file file_context)
  (filecon "/etc/ca-certificates\.conf\..*" file file_context)

  (filecon "/etc/ssl" dir file_context)
  (filecon "/etc/ssl/.*" any file_context)

  (filecon "/usr/share/ca-certificates" dir file_context)
  (filecon "/usr/share/ca-certificates/.*" any file_context)

  (macro conf_file_type_transition_file ((type ARG1))
         (call .conf.file_type_transition
               (ARG1 file dir "ca-certificates"))
         (call .conf.file_type_transition
               (ARG1 file dir "ssl"))
         (call .conf.file_type_transition
               (ARG1 file file "ca-certificates.conf"))
         (call .conf.file_type_transition
               (ARG1 file file "ca-certificates.conf.dpkg-new")))

  (macro data_file_type_transition_file ((type ARG1))
         (call .data.file_type_transition
               (ARG1 file dir "ca-certificates")))

  (blockinherit .file.cert.template)

) ;; namespace cert

(in file

    (block cert

      (macro type ((type ARG1))
	     (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_dirs)
      (blockinherit file.all_macro_template_files)
      (blockinherit file.all_macro_template_lnk_files)

      (typeattribute typeattr)

      (call file.type (typeattr))

      (call .xattr.associate_fs_pattern.type (typeattr))

      (block base_template

	(blockabstract base_template)

	(blockinherit .file.base_template)

	(call .file.cert.type (file)))

      (block template

	(blockabstract template)

	(blockinherit .file.cert.base_template)
	(blockinherit .file.macro_template_dirs)
	(blockinherit .file.macro_template_files)
	(blockinherit .file.macro_template_lnk_files))))

(in file.unconfined
    (call .cert.conf_file_type_transition_file (typeattr))
    (call .cert.data_file_type_transition_file (typeattr))
) ;; namespace file.unconfined
