;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(sidcontext init (sys.id sys.role sys.subj sys.lowlow)) ;; userspace_initial_context

(in config

    (filecon "/sys/kernel/config" dir ())
    (filecon "/sys/kernel/config/.*" any ()))

(in debug

    (filecon "/sys/kernel/debug" dir ())
    (filecon "/sys/kernel/debug/.*" any ()))

(in devpts

    (filecon "/dev/pts" dir ())
    (filecon "/dev/pts/.*" any ()))

(in devtmp

    (allow fs self (filesystem (associate))))

(in efivar

    (filecon "/sys/firmware/efi/efivars" dir ())
    (filecon "/sys/firmware/efi/efivars/.*" any ()))

(in fs.unconfined

    (call .proc.root_file_type_transition_fs (typeattr))
    (call .sys.root_file_type_transition_fs (typeattr)))

(in fuse

    (filecon "/sys/fs/fuse/connections" dir ())
    (filecon "/sys/fs/fuse/connections/.*" any ()))

(in hugetlb

    (filecon "/dev/hugepages" dir ())
    (filecon "/dev/hugepages/.*" any ())

    (allow fs self (filesystem (associate))))

(in mqueue

    (filecon "/dev/mqueue" dir ())
    (filecon "/dev/mqueue/.*" any ())

    (allow fs self (filesystem (associate))))

(in proc

    (filecon "/proc" dir fs_context)
    (filecon "/proc/.*" any ())

    (macro root_file_type_transition_fs ((type ARG1))
	   (call .root.file_type_transition
		 (ARG1 fs dir "proc")))

    (call .xattr.associate_fs (fs)))

(in pstore

    (filecon "/sys/fs/pstore" dir ())
    (filecon "/sys/fs/pstore/.*" any ()))

(in rpcpipe

    (filecon "/run/rpc_pipefs" dir ())
    (filecon "/run/rpc_pipefs/.*" any ()))

(in security

    (filecon "/sys/kernel/security" dir ())
    (filecon "/sys/kernel/security/.*" any ()))

(in selinux

    (filecon "/sys/fs/selinux" dir ())
    (filecon "/sys/fs/selinux/.*" any ()))

(in sys

    (filecon "/sys" dir fs_context)
    (filecon "/sys/.*" any ())

    (macro root_file_type_transition_fs ((type ARG1))
	   (call .root.file_type_transition
		 (ARG1 fs dir "sys")))

    (allow fs self (filesystem (associate)))

    (call hugetlbfs.hugetlb_fs_type_transition_file (subj "*"))

    (call mqueuefs.mqueue_fs_type_transition_file (subj "*"))

    (call tmp.tmp_file_type_transition_file (subj dir "*"))
    (call tmp.tmp_file_type_transition_file (subj fifo_file "*"))
    (call tmp.tmp_file_type_transition_file (subj file "*"))
    (call tmp.tmp_file_type_transition_file (subj lnk_file "*"))
    (call tmp.tmp_file_type_transition_file (subj sock_file "*"))

    (call tmpfs.tmp_fs_type_transition_file (subj dir "*"))
    (call tmpfs.tmp_fs_type_transition_file (subj fifo_file "*"))
    (call tmpfs.tmp_fs_type_transition_file (subj file "*"))
    (call tmpfs.tmp_fs_type_transition_file (subj lnk_file "*"))
    (call tmpfs.tmp_fs_type_transition_file (subj sock_file "*"))

    (call .xattr.associate_fs (fs)))

(in sys.hugetlbfs

    (macro hugetlb_fs_type_transition_file ((type ARG1)(name ARG2))
	   (call .hugetlb.fs_type_transition
		 (ARG1 file file ARG2))))

(in sys.mqueuefs

    (macro mqueue_fs_type_transition_file ((type ARG1)(name ARG2))
	   (call .mqueue.fs_type_transition
		 (ARG1 file file ARG2))))

(in sys.tmp

    (macro tmp_file_type_transition_file ((type ARG1)(class ARG2)(name ARG3))
	   (call .tmp.file_type_transition
		 (ARG1 file ARG2 ARG3))))

(in sys.tmpfs

    (macro tmp_fs_type_transition_file ((type ARG1)(class ARG2)(name ARG3))
	   (call .tmp.fs_type_transition
		 (ARG1 file ARG2 ARG3))))

(in sys.unconfined

    (allow typeattr subj (system (reboot reload start status stop))))

(in trace

    (filecon "/sys/kernel/tracing" dir ())
    (filecon "/sys/kernel/tracing/.*" any ()))

(boolean xserver_object_manager false)
